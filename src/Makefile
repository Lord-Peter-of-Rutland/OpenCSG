#############################################################################
# Makefile for building: libopencsg.so.1.5.1
# Generated by qmake (2.01a) (Qt 4.8.6) on: Mo. Sep 15 22:00:30 2014
# Project:  src.pro
# Template: lib
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -O2 -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -fPIC $(DEFINES)
INCPATH       = -I. -I../include -I.. -I/usr/X11R6/include
LINK          = g++
LFLAGS        = -Wl,-O1 -shared -Wl,-soname,libopencsg.so.1
LIBS          = $(SUBLIBS)  -L/usr/X11R6/lib64 -lGLEW -lGL 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = area.cpp \
		batch.cpp \
		context.cpp \
		channelManager.cpp \
		frameBufferObject.cpp \
		frameBufferObjectExt.cpp \
		occlusionQuery.cpp \
		opencsgRender.cpp \
		openglHelper.cpp \
		primitive.cpp \
		primitiveHelper.cpp \
		renderGoldfeather.cpp \
		renderSCS.cpp \
		scissorMemo.cpp \
		settings.cpp \
		stencilManager.cpp
OBJECTS       = area.o \
		batch.o \
		context.o \
		channelManager.o \
		frameBufferObject.o \
		frameBufferObjectExt.o \
		occlusionQuery.o \
		opencsgRender.o \
		openglHelper.o \
		primitive.o \
		primitiveHelper.o \
		renderGoldfeather.o \
		renderSCS.o \
		scissorMemo.o \
		settings.o \
		stencilManager.o
DIST          = src.pro
QMAKE_TARGET  = opencsg
DESTDIR       = ../lib/
TARGET        = libopencsg.so.1.5.1
TARGETA       = ../lib/libopencsg.a
TARGETD       = libopencsg.so.1.5.1
TARGET0       = libopencsg.so
TARGET1       = libopencsg.so.1
TARGET2       = libopencsg.so.1.5

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  ../lib/$(TARGET)

../lib/$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	@$(CHK_DIR_EXISTS) ../lib/ || $(MKDIR) ../lib/ 
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../lib/$(TARGET)
	-$(DEL_FILE) ../lib/$(TARGET0)
	-$(DEL_FILE) ../lib/$(TARGET1)
	-$(DEL_FILE) ../lib/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../lib/



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

dist: 
	@$(CHK_DIR_EXISTS) .tmp/opencsg1.5.1 || $(MKDIR) .tmp/opencsg1.5.1
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/opencsg1.5.1/ && (cd `dirname .tmp/opencsg1.5.1` && $(TAR) opencsg1.5.1.tar opencsg1.5.1 && $(COMPRESS) opencsg1.5.1.tar) && $(MOVE) `dirname .tmp/opencsg1.5.1`/opencsg1.5.1.tar.gz . && $(DEL_FILE) -r .tmp/opencsg1.5.1


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../lib/$(TARGET) 
	-$(DEL_FILE) ../lib/$(TARGET0) ../lib/$(TARGET1) ../lib/$(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

area.o: area.cpp opencsgConfig.h \
		area.h \
		openglHelper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o area.o area.cpp

batch.o: batch.cpp opencsgConfig.h \
		batch.h \
		primitiveHelper.h \
		area.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o batch.o batch.cpp

context.o: context.cpp opencsgConfig.h \
		context.h \
		offscreenBuffer.h \
		frameBufferObject.h \
		frameBufferObjectExt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o context.o context.cpp

channelManager.o: channelManager.cpp opencsgConfig.h \
		channelManager.h \
		context.h \
		offscreenBuffer.h \
		openglHelper.h \
		area.h \
		settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o channelManager.o channelManager.cpp

frameBufferObject.o: frameBufferObject.cpp opencsgConfig.h \
		frameBufferObject.h \
		offscreenBuffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o frameBufferObject.o frameBufferObject.cpp

frameBufferObjectExt.o: frameBufferObjectExt.cpp opencsgConfig.h \
		frameBufferObjectExt.h \
		offscreenBuffer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o frameBufferObjectExt.o frameBufferObjectExt.cpp

occlusionQuery.o: occlusionQuery.cpp opencsgConfig.h \
		occlusionQuery.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o occlusionQuery.o occlusionQuery.cpp

opencsgRender.o: opencsgRender.cpp opencsgConfig.h \
		opencsgRender.h \
		primitiveHelper.h \
		area.h \
		settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o opencsgRender.o opencsgRender.cpp

openglHelper.o: openglHelper.cpp opencsgConfig.h \
		openglHelper.h \
		area.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o openglHelper.o openglHelper.cpp

primitive.o: primitive.cpp opencsgConfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o primitive.o primitive.cpp

primitiveHelper.o: primitiveHelper.cpp opencsgConfig.h \
		openglHelper.h \
		area.h \
		primitiveHelper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o primitiveHelper.o primitiveHelper.cpp

renderGoldfeather.o: renderGoldfeather.cpp opencsgConfig.h \
		opencsgRender.h \
		batch.h \
		channelManager.h \
		occlusionQuery.h \
		openglHelper.h \
		area.h \
		primitiveHelper.h \
		scissorMemo.h \
		stencilManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o renderGoldfeather.o renderGoldfeather.cpp

renderSCS.o: renderSCS.cpp opencsgConfig.h \
		opencsgRender.h \
		batch.h \
		channelManager.h \
		context.h \
		occlusionQuery.h \
		openglHelper.h \
		area.h \
		primitiveHelper.h \
		scissorMemo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o renderSCS.o renderSCS.cpp

scissorMemo.o: scissorMemo.cpp opencsgConfig.h \
		openglHelper.h \
		area.h \
		scissorMemo.h \
		channelManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o scissorMemo.o scissorMemo.cpp

settings.o: settings.cpp opencsgConfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o settings.o settings.cpp

stencilManager.o: stencilManager.cpp opencsgConfig.h \
		area.h \
		openglHelper.h \
		stencilManager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stencilManager.o stencilManager.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/lib/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/lib/ 
	-$(INSTALL_PROGRAM) "../lib/$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(STRIP) --strip-unneeded "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)/usr/local/lib/$(TARGET2)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET0)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET1)" 
	 -$(DEL_FILE) "$(INSTALL_ROOT)/usr/local/lib/$(TARGET2)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/lib/ 


install_headers: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/local/include/ || $(MKDIR) $(INSTALL_ROOT)/usr/local/include/ 
	-$(INSTALL_FILE) ../include/opencsg.h $(INSTALL_ROOT)/usr/local/include/


uninstall_headers:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/local/include/opencsg.h
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/local/include/ 


install:  install_target install_headers  FORCE

uninstall: uninstall_target uninstall_headers   FORCE

FORCE:

